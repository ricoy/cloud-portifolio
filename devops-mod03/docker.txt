‚ñ∫ Criando uma VM - AWS EC2:

AWS > EC2

‚Ä¢ Image: Ubuntu 22.04
‚Ä¢ Instance Type: t2.micro
‚Ä¢ Key Pairs: docker-vm-ssh
‚Ä¢ VPC: Default
‚Ä¢ Security Group (Firewall): docker-vm-sg


‚ñ∫ Acessando a VM-EC2:

ssh -i docker-vm-ssh.pem ubuntu@ip-publico-ec2

-------------------------------------------------------------

‚ñ∫ Instalando Docker no Linux Ubuntu

https://docs.docker.com/engine/install/ubuntu/

‚Ä¢ Instalando atrav√©s de um script

# Download do Script:

curl -fsSL https://get.docker.com -o get-docker.sh

# Executando o Script:

sudo sh get-docker.sh

# Testando docker:

docker ps

Error: /var/run/docker.sock: connect: permission denied

# Corrigindo as permiss√µes:

sudo chmod 666 /var/run/docker.sock

# Testando docker novamente:

docker ps

CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

docker version
docker info

--------------------------------------------------------------------

‚ñ∫ Bonus! üòÅ

‚Ä¢ 'The Matrix'
sudo apt install cmatrix
http://manpages.ubuntu.com/manpages/bionic/man1/cmatrix.1.html

‚Ä¢ 'A Flying Train'
sudo apt install sl |  sl -F
https://itsfoss.com/ubuntu-terminal-train/

‚Ä¢ 'Cowsay'
sudo apt install cowsay  | cowsay Hello Bootcamper!!!
https://www.vivaolinux.com.br/dica/cowsay-A-vaquinha-que-fala-no-seu-terminal
https://opensource.com/article/21/11/linux-cowsay-command

‚Ä¢ Listing Containers:
docker ps

‚Ä¢ Listing Images:
docker images

‚Ä¢ Creating a Container:
docker run docker/whalesay

docker ps -a
docker images

docker run docker/whalesay cowsay 'Hello Bootcampers, Welcome!'

docker ps -a | A lot of containers created...

docker images | Only one image!

The End üê≥

============================================================================

Infoma√ß√£o Extra

Como resolver: Amazon EC2 ssh timeout devido tempo de inatividade | perdendo conex√£o!

Passo 1.
Adicionar uma diretiva "client-alive" na VM no arquivo de configurat√ß√£o 'SSH-server'

echo 'ClientAliveInterval 60' | sudo tee --append /etc/ssh/sshd_config

Passo 2.
Reiniciar o 'SSH server'

sudo service ssh restart

‚ñ∫ Limpando o ambiente:

docker system prune -a -f --volumes

mkdir docker-images
cd docker-images
wget https://tcb-bootcamps.s3.amazonaws.com/bootcamp-devops-cloud/pt/module3/docker_images.zip
sudo apt install unzip | if some warning about restarting service, just proceed!
unzip docker_images.zip

--------------------------------------------------------------------------------------
SimpleHTTPServer √© um m√≥dulo do Python que permite criar um  webserver
de forma f√°cil e r√°pida!
Uma das grandes vantagens do 'SimpleHTTPServer' √© que voc√™ n√£o precisa instalar nada,
apenas ter o python instalado!
---------------------------------------------------------------------------------------

‚Ä¢ Dockerfile:

FROM python:2.7
WORKDIR /html
COPY index.html .
EXPOSE 3000
CMD python -m SimpleHTTPServer 3000

docker build . -t devopscloudbootcamp/my-python-img:v1.0
docker images
docker run --rm -d -p 3000:3000 --name ctr-py-http devopscloudbootcamp/my-python-img:v1.0

‚ñ∫ Modificando o Dockerfile:

FROM python:2.7
WORKDIR /html
COPY . .
EXPOSE 3000
CMD python -m SimpleHTTPServer 3000

‚ñ∫ Docker TAG:

docker tag IMAGE-ID devopscloudbootcamp/my-python-image:v0.0

‚ñ∫ Docker Push:

docker push devopscloudbootcamp/my-python-image:v2.0

Se receber um:

'denied': requested access to the resource is denied

Execute:

docker login


# Informa√ß√µes dos processo:

docker top ctr-id

docker stats (cpu, mem usage) | statistics

üöÄ

‚ñ∫ Limpando o ambiente:

docker system prune -a -f --volumes

mkdir docker-volumes
cd docker-volumes
wget https://tcb-bootcamps.s3.amazonaws.com/bootcamp-devops-cloud/pt/module3/docker_volumes.zip
sudo apt install unzip | if some warning about restarting service, just proceed!
unzip docker_volumes.zip

nano Dockerfile | nano requirements

docker build . -t devopscloudbootcamp/img-upload-file:v1.0
docker images

‚ñ∫ Executando container sem 'Persist√™ncia de dados':

docker run --rm -d -p 3000:3000 --name ctr-upload-file devopscloudbootcamp/img-upload-file:v1.0

docker exec CTR-ID ls   |  ls uploads
docker stop CTR-ID
docker run --rm -d -p 3000:3000 --name ctr-upload-file devopscloudbootcamp/img-upload-file:v1.0
docker exec CTR-ID ls   |  ls uploads

‚ñ∫ Criando um volume:

docker volume ls
docker volume create upload-files
docker volume ls

sudo ls -l /var/lib/docker/volumes    [Where Docker store all its data]

docker stop CTR-ID

‚ñ∫ Container com Persist√™ncia (Volume) gerenciado pelo Docker:

docker run --rm -d -p 3000:3000 --name ctr-upload-file -v upload-files:/app/uploads devopscloudbootcamp/img-upload-file:v1.0

docker inspect CTR-ID | grep volume

docker stop CTR-ID

docker run --rm -d -p 3000:3000 --name ctr-upload-file -v upload-files:/app/uploads devopscloudbootcamp/img-upload-file:v1.0


[ Bind Mount ]

‚ñ∫ Persist√™ncia com Pasta/Diret√≥rio gerenciado por Voc√™:

docker stop CTR-ID

mkdir bkp-upload
pwd
docker run --rm -d -p 3000:3000 --name ctr-upload-file -v /home/ubuntu/docker-volumes/bkp-upload:/app/uploads devopscloudbootcamp/img-upload-file:v1.0

‚ñ∫ Atualizando arquivos do Projeto em tempo real, sem precisar "re-buildar" a aplica√ß√£o:

docker stop CTR-ID
docker run --rm -d -p 3000:3000 --name ctr-upload-file -v /home/ubuntu/docker-volumes/templates:/app/templates devopscloudbootcamp/img-upload-file:v1.0

üöÄ


COMPLETE & CONTINUE

============================================================================

‚ñ∫ Limpando o ambiente:

docker system prune -a -f --volumes

‚ñ∫ Default Networks:

docker network ls

docker network inspect bridge

sudo apt install bridge-utils
brctl show

docker run -it ubuntu [ quando voc√™ sair, o container vai parar a execu√ß√£o! ]

Solu√ß√£o:

docker run -itd ubuntu bash | docker exec -it CTR-ID bash
apt update
apt install iproute2
ip a
ip a | grep global
ip hostname -I

docker network inspect bridge
brctl show

---

‚ñ∫ Criando uma Rede (Network)

docker network create devops-net
docker network ls
docker network inspect devops-net

docker network create -d macvlan my-mac-net
docker network ls

‚ñ∫ Conectando uma Network em um Container:

docker run -d --name my-ctr-nginx --net devops-net nginx
docker run -d --name my-ctr-httpd --net devops-net httpd

‚ñ∫ Inspecionando container:

docker inspect my-ctr-nginx
docker inspect my-ctr-httpd

‚ñ∫ Inspecionando network:

docker network inspect devops-net

‚ñ∫ Disconectando uma network de um container

docker network disconnect devops-net my-ctr-nginx my-ctr-httpd

‚ñ∫ Removendo uma rede (network)

docker network rm my-mac-net devops-net

üöÄ

============================================================================

# YAML para Docker Compose: WordPress + MySQL | py-webserver

VS Code Extension: Docker (Microsoft) | YML (Redhat)
-------------------------------------------------------
version: '3'

services:compose
ctr-db:
image: mysql:5.7
volumes:
- db-vol:/var/lib/mysql
environment:
MYSQL_ROOT_PASSWORD: wordpress
MYSQL_DATABASE: wordpress
MYSQL_USER: devopscloudbootcamp
MYSQL_PASSWORD: devopscloudbootcamp
networks:
- wp-net
restart: always

ctr-wp:
image: wordpress:latest
ports:
- "3000:80"
environment:
WORDPRESS_DB_HOST: ctr-db:3306
WORDPRESS_DB_USER: devopscloudbootcamp
WORDPRESS_DB_PASSWORD: devopscloudbootcamp
WORDPRESS_DB_NAME: wordpress
networks:
- wp-net
restart: always
depends_on:
- ctr-db

py-websever:
build:
context: .
dockerfile: Dockerfile
ports:
- "3001:7000"
restart: always

volumes:
db-vol: {}
networks:
wp-net: {}

---------------------------------------------------------------

# Yaml Validator:  https://jsonformatter.org/yaml-validator
# Yaml Lint: http://www.yamllint.com

üöÄ

================================================================

‚ñ∫ Limpando o ambiente:

docker system prune -a -f --volumes

‚ñ∫ Instalando Docker Compose no Linux:

https://docs.docker.com/compose/install/

N√£o precisamos instalar!
EC2 Ubuntu 22.04 j√° tem o Docker Compose instalado!

‚ñ∫ Checando:

docker compose version

mkdir docker-compose
cd docker-compose
wget https://tcb-bootcamps.s3.amazonaws.com/bootcamp-devops-cloud/pt/module3/docker-compose.yml
wget https://tcb-bootcamps.s3.amazonaws.com/bootcamp-devops-cloud/pt/module3/docker_images.zip


docker compose up

‚ñ∫ Parando o docker compose: CTRL + C

docker compose up -D

docker compose ps
docker ps
docker network ls
docker volume ls
docker compose down


?? Como remover as vari√°veis que est√£o dentro do arquivo YAML...
...e usar um arquivo externo para essa finalidade ??

üöÄ


